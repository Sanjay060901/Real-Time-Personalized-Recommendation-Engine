version: '3.8'
environment:
- KAFKA_BROKER_ID=1
- KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
- KAFKA_LISTENERS=PLAINTEXT://:9092
- KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
- ALLOW_PLAINTEXT_LISTENER=yes
depends_on:
- zookeeper
ports:
- '9092:9092'


minio:
image: minio/minio:latest
command: server /data
environment:
- MINIO_ROOT_USER=minioadmin
- MINIO_ROOT_PASSWORD=minioadmin
ports:
- '9000:9000'


postgres:
image: postgres:15
environment:
POSTGRES_USER: feast
POSTGRES_PASSWORD: feastpass
POSTGRES_DB: feast
ports:
- '5432:5432'


redis:
image: redis:7
ports:
- '6379:6379'


spark:
image: bitnami/spark:latest
environment:
- SPARK_MODE=master
ports:
- '7077:7077'


api:
build: ./docker
dockerfile: Dockerfile.api
volumes:
- ./services/serving:/app
ports:
- '8000:8000'
depends_on:
- kafka
- redis


producer:
build: ./docker
dockerfile: Dockerfile.producer
volumes:
- ./services/event-producer:/app
depends_on:
- kafka


feast:
image: feastdev/feast:latest
environment:
- FEAST_CORE_URL=feast-core:6565
ports:
- '6565:6565'


# (Optional) Airflow service for orchestration in production demo


networks:
default:
name: recommender_net
